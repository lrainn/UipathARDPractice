您好，欢迎来到新的 UiPath 演示！在本视频中，我们将了解一种用于过滤数据表的高级方法，即 Select 方法。



让我们看看我们的数据。在这里，我们列出了可供出租的公寓。如我们所见，数据被构造为表格。



我们希望将此电子表格中的信息存储在 DataTable 变量中，并使用 Select 方法使用多个条件过滤公寓。



让我们从一个简单的选择开始。我们将收回所有宠物友好的公寓。为此，我们将首先在我们的项目中添加一个 Workbook Read Range 活动，指示包含列表的文件，然后删除 Range 属性字段中的值。



接下来，我们将创建一个 DataTable 变量，我们将在其中存储结果。我们将其命名为“公寓”。



让我们也重命名我们的活动。伟大的！



为了从我们的列表中过滤公寓，我们需要做的就是添加一个 Assign 活动并输入我们的 Select 语法。



对于输出，我们可以使用原始 DataTable 变量或创建一个新变量。



对于这个练习，让我们创建一个新的。



我们将其命名为“FilteredApartments”。



我们还需要将其类型更新为 System.Data.DataTable。



让我们在“分配”活动的“收件人”字段中添加我们的新变量。



对于 Value 字段，我们将打开 Expression Editor，以便我们可以完整地查看 Select 语法。



我们将首先输入公寓，我们的输入变量的名称，点选择，方法的名称。



在括号内，我们需要提供引号之间的过滤表达式，因为它需要是字符串格式。



让我们分解一下。我们必须在方括号之间提供列名，然后是运算符，然后是所需的值。如果所需的值也是一个字符串，我们将它添加到撇号之间。过滤器表达式在引号之间输入，因为它是一个字符串。



最后，但并非最不重要，让我们添加点 CopyToDataTable。



而且，我们还将重命名“分配”活动。



接下来，我们想添加一个日志消息来标记进程的结束并切换一个断点。



我们将在调试模式下快速运行工作流文件，并查看 Locals 面板中发生的情况。



看起来执行已经到了断点。



本地面板上的快速说明。它显示属性或活动以及用户定义的变量和参数。当我们想随时检查流程的执行情况时，这是一个非常方便的工具。



在 Locals 面板中的 Variables 下，我们可以看到我们的输入和输出变量，Apartments 和 FilteredApartments。



当我们单击公寓的查看更多按钮时，我们可以看到原始数据表。



当我们为 FilteredApartments 变量单击查看更多时，我们可以看到过滤后的公寓仅包含宠物友好公寓。完美的！



好的，到目前为止，我们只使用一个标准过滤了输入 DataTable。让我们看看如何添加更多。



现在，我们要检索价格在 400 到 800 之间且房间数不同于 1 的所有宠物友好公寓。



让我们转到我们的 Assign 活动并修改我们之前添加的语法。



为了达到我们想要的结果，我们将在条件之间使用逻辑运算符 AND。



我们希望价格列中的值大于 400 且小于 800，并且房间数列中的值不等于 1。



我们可以通过将其括在括号中并在其前面输入“NOT”来添加排除标准。

另请注意，我们没有对任何数值使用撇号。



一切看起来都不错。



让我们再次在调试模式下运行我们的工作流文件。



正如我们所看到的，只有 4 套公寓符合我们的标准。



但是，如果我们应用的条件太严格并且数据表中没有返回任何行，会发生什么情况？



为了测试这一点，让我们删除之前的条件，然后更新语法以仅检索价格低于 100 的公寓。



让我们运行我们的工作流文件。



我们收到名为“Filter datatable with select”的 Assign 活动抛出的错误。由于过滤太严格，没有留下任何行。



我们很有可能在生产中遇到这种情况。那么我们该如何解决呢？



我们可以通过在语法中添加 if 运算符来防止此错误。基本上，如果没有返回任何行，我们将只克隆原始数据表。



让我们花点时间来理解这个表达。



条件测试 Select 方法的结果。点 Any 方法返回一个布尔值，如果至少返回一行，则为 True，如果没有返回行，则为 False。



如果条件为 True，我们将继续过滤，就像前一种情况一样。如果条件为 False，我们将克隆 Apartments DataTable 变量的结构，以便将其分配给 FilteredApartments。



让我们再运行一​​次我们的项目。



而且，正如预期的那样，我们有一个原始数据表的空副本。



这就是这个视频！我们下期见！