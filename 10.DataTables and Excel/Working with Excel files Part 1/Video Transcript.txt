您好，欢迎回到新的 UiPath 演示！


现在我们已经介绍了数据表变量的基础知识，让我们学习如何在使用 ExceI 电子表格时使用它们。



我们将通过从具有不同扩展名的两个 Excel 文件中读取数据来开始我们的演示。在这种情况下，我们将看到哪些 UiPath Studio 活动适合每种文件格式。我们将使用两个 DataTable 变量来存储和过滤这些文件中的信息。最后，我们将数据写入一个新的 Excel 文件。



让我们开始！



已经创建了一个名为“FilteringCompaniesBefore2005”的新项目。首先，我们将读取 .xlsx 格式的 Excel 电子表格中的信息，然后我们将转到 .xls 文件。请注意，这两个文件都包含在项目文件夹中。



我们将使用工作簿类别中的读取范围活动检索 .xlsx 电子表格中的信息。此活动读取 Excel 范围的值并将其存储在 DataTable 变量中。工作簿活动可以与 .xls 和 .xlsx 文件交互。



我们可以将它拖放到我们的序列中。



对于 .xls 文件，我们将使用不同的读取范围活动，即 Excel 应用程序集成类别中的活动。 Excel 活动可以与 .xls、.xlsx 和 .xlsm 文件交互。



在将它添加到设计器面板之前，我们需要一个 Excel Application Scope 容器。让我们重命名之前的 Workbook Read Range 活动，以在标题中包含文件类型。

我们将浏览我们的 .xlsx 文件，然后删除范围，以便读取整个工作表。



接下来，我们将选择 Output DataTable 字段并按 Ctrl+K 创建一个新变量。我们可以称之为“OutputDT1”。



请注意，已选中 AddHeaders 选项。这意味着活动将考虑范围列标题定义中的第一行。



让我们转到 Excel Application Scope，它将读取 .xls 电子表格。我们将相应地重命名它并浏览文件。然后，我们将选择 Read Range 活动并在 Output DataTable 字段中创建一个名为“OutputDT2”的新变量。



我们需要在整个工作流程中使用此变量，因此我们将打开“变量”面板以更改其范围。好吧！



让我们快速打开我们的文件，看看它们是什么样的。



我们将切换到项目选项卡，展开数据文件夹，右键单击“data 1 xlsx”文件并选择打开。



第一个文件包含一些公司的成立年份、名称和收入。

让我们打开第二个文件。



请注意，它包含相同类型的信息，但列的排列顺序不同。



好的，现在我们已经阅读了数据，让我们过滤所有成立于 2005 年之前的公司。



我们将添加两个过滤数据表活动，每个变量一个。让我们重命名第一个。

现在我们可以打开过滤器向导。我们将在输入和输出数据表字段中输入我们的变量，因为 2005 年之后成立的公司不是必需的。



现在我们将设置过滤规则。在“过滤行”部分，让我们确保选中“保留”单选按钮。筛选栏是“创始年份”。此字段区分大小写，因此我们需要键入列的确切名称。



我们的运算符小于，值为 2005。



请注意，2005 是用 2 个十进制值写入的，因为比较是使用 double 类型的值进行的。



现在让我们转到下一个选项卡 - “输出列”。此选项卡提供重新排序列的可能性。让我们先放置“公司”列，然后是“收入”，然后是“创始年份”。



让我们重命名活动，然后为第二个变量重复这些步骤。再一次，输入和输出数据表字段包含相同的变量。



在这个文件中，列名是不同的——“Founding”。但是，条件是相同的。

让我们转到“输出列”选项卡并像对前一个变量所做的那样重新排列列。



同样，让我们​​确保列的名称是正确的。



现在我们的两个变量包含了所需的数据，我们需要将信息加入其中。由于列名之间存在一些差异，让我们使用“构建数据表”活动并创建一个名为 FilteredCompanies 的新变量。



我们将第一列称为“公司”，保持字符串类型不变，并禁用空白单元格。

第二列称为“收入”，也包含字符串类型的数据。我们还将取消选中 null 并将最大长度更新为“100”。



我们已经到了最后一栏。我们称其为 Founding Year 并将数据类型设置为整数。



接下来，我们将添加一个 For Each Row 活动，它的作用与 For Each 相同，但仅用于 DataTable 变量。



由于我们要收集两个变量的行，因此我们将使用两个 For Each Row 活动。

让我们也快速将“Row”大写为我们的 2 个活动。完美！



第一个将使用行点项数组方法将 outputDT1 中的行添加到 FilteredCompanies 变量。



该方法将每一行中的数据转换为一个数组项，然后将其添加到 FilteredCompanies 变量中。



好的，让我们继续讨论 outputDT2 变量。



我们需要完成的步骤完全相同。



好的，所有行都存储在一个变量中。现在必须将数据写入 Excel 文件。



Output 文件夹包含一个不同的 .xlsx 文件，其中包含一些乱码数据。

我们将使用 Excel 写入范围活动，该活动必须放置在 Excel Application Scope 容器内，以确保整个文件将被覆盖。



接下来，我们将指明要写入数据的文件。就是这样！



让我们运行工作流，看看会发生什么。



请注意，Excel 应用程序范围容器内的活动可以在 Excel 文件打开时执行，而工作簿活动要求文件关闭。

它奏效了！



我们关于使用 Excel 文件和数据表的演示到此结束。在结束视频之前，让我们快速回顾一下我们学到的东西：



我们为每种文件扩展名类型使用了不同的读取范围活动。对于 .xlsx，我们使用了 Workbook 类别中的 Read Range 活动。而对于 .xls 文件扩展名，我们使用了 Excel 应用程序集成类别中的读取范围活动。



我们添加了两个过滤数据表活动，每个变量一个。在第一个活动中，我们在输入和输出过滤器向导字段中添加了 OutputDt1 变量。我们选择了保留单选按钮选项并将条件配置为仅保留“成立年份”值小于 2005 年的值。我们还重新安排了筛选向导内“输出列”选项卡中的列顺序。



我们对 OutputDt2 变量执行了相同的步骤。我们从输出列选项卡中设置列顺序与之前的活动相同。



为了解决组合两个数据表时列名差异的问题，我们使用了一个新的构建数据表活动，我们在其中创建了一个名为 Filtered Companies 的新变量。



为了收集我们的两个变量的值并将它们存储在一个单一的新变量中，我们使用了专为变量处理而开发的 For Each Row 活动。为了将每一行的数据转换为数组项，我们使用了行项方法。



谢谢观看！下次见，直到那时，快乐的自动化！