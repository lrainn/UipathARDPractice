您好，欢迎回到新的 UiPath 演示！



在本视频中，我们将使用数据表活动根据特定条件过滤数据并将结果输出到新文件。



让我们想象以下业务场景：我们有一个包含员工的数据库，我们需要提取满足某些条件的员工的姓名。这种流程在当今每个 HR 部门都非常普遍。



让我们开始！



这里我们有一个包含员工列表的 Excel 文件，其中包含姓名、年龄、工作领域、当前工作和薪水的列。它有大约 300 个条目。



处理 Excel 文件的标准方法是提取数据、将其存储在 DataTable 变量中并执行不同的操作以获得所需的信息。完成此操作后，可以将数据写入同一文件或新的 Excel 文件。此演示基于标准方法。



我们要做的第一件事是读取文件中的数据。



让我们添加一个 Workbook Read Range 活动，正确命名它，指定文件路径，并在 Output DataTable 属性中创建输出变量。



在我们的例子中，由于我们想要获取文件中的所有数据，我们将属性面板中的输入范围字段留空。



请注意，由于我们的文件包含标题，因此我们将 AddHeaders 属性保持选中状态。

接下来，我们要提取年龄在 30 岁以下且收入在 10 万以上的员工的姓名。



我们将使用过滤数据表活动和过滤向导按钮来自定义过滤条件。



让我们更新我们的活动的名称。



首先，我们需要提供输入数据表。



其次，我们需要一个输出数据表。由于我们不想使用过滤后的结果创建不同的 DataTable，我们可以输入相同的变量。



让我们使用 Keep 选项并指定我们要过滤的列。 “年龄”就是其中之一，我们将在“名称”列中键入它的名称。



然后我们将选择一个操作。年龄应小于 30。这需要“小于”运算符到位。然后将值设置为 30.00。请记住，必须添加“点双零”，否则过滤将失败。



现在我们要添加与收入相关的条件。我们只需单击值旁边的加号按钮，下面就会显示一个新条件。



注意条件前的“与”。这很重要，因为我们想要将这个过滤标准与另一个过滤标准分开。然而，如果我们点击“And”，我们会看到它变成了“Or”。



如果我们想根据多个条件过滤数据，这很有用，这些条件不需要同时为真。例如，我们可能想要找到 30 岁以下或年收入超过 100 000 的所有人。



但是现在，让我们单击“或”切换回“和”，然后输入“收入”。



这一次，我们要识别每个收入超过 100 000 的人。显然，我们需要选择“大于”运算符，然后键入 100 000.00 的值输入。



请注意，通过读取范围操作从 Excel 读取的所有数字数据都被 UiPath 解释为 Double，因此在筛选向导中用于这些列的比较的值应始终相应地设置格式，就像我们在本示例中所做的那样。



现在让我们单击输出列选项卡。



在这里，我们可以输入要处理的特定列。我们想保留所有这些，因此我们将保留此选项卡原样，然后单击“确定”关闭“过滤器向导”。



让我们看看如何将过滤后的信息保存到不同格式的数据表中。

我们将在 Filter Data Table 之后添加一个 Build data-table 活动。我们将使用它来存储过滤后的 DataTable。



在构建数据表向导中，我们将删除现有列并创建 3 个新列 - 姓名、年龄和收入。所有数据类型均为字符串，并且将禁用“Allow Null”。

让我们调用新的 DataTable 实现者 DT。



让我们更新 Activity Name ...，然后在“属性”面板的“输出数据表”字段中创建新变量。



现在这是一个非常重要的部分，For Each Row 活动。我们将使用它来遍历过滤后的 DataTable 中的每一行，并仅提取我们感兴趣的信息。



我们将遍历 inputDT 变量并使用 Get Row Item 活动，该活动输出当前行中特定单元格的值。



为了指示我们想要的单元格，我们将使用当前行，由 Row 项目和列的名称指示。使用列名比索引更可靠，因为如果添加或删除其他列，则不需要修改它。



至于输出，我们将创建一个新变量。在我们的例子中，我们提取当前行的“Name”列中的值，并将其存储在 Name 字符串变量中。



我们还通过在末尾添加 Name 来重命名我们的活动。伟大的！



现在让我们复制我们感兴趣的下一个信息的活动并重命名它。

这一次，我们将列名设置为“Age”，并为输出值创建一个名为“Age”的变量。



让我们转到变量面板并将年龄设置为系统双变量类型。



除了 Get Row Item 之外，我们还可以使用 Assign 活动来实现从某个单元格中提取信息的相同目的。



为此，我们将定义一个新变量并使用 row.ItemArray 方法。



为了向您展示执行此操作的另一种方法，我们将使用包含感兴趣数据的列的索引。



让我们回到 Excel 文件，在我们的例子中，收入是第五列，但由于计数从 0 开始，我们将输入 4。我们将使用 toString 跟随表达式。



Row.ItemArray(4).ToString



让我们还在 To 字段中创建我们的 Income 变量。当然，我们将重命名活动。



一旦我们获得了我们感兴趣的三列信息：姓名、年龄和收入，让我们使用添加数据行活动将数据添加到新的 AchieversDT 变量中。



这里的两个重要参数是要添加到的 DataTable 变量的名称（在我们的示例中为achiversDT）和要添加的数据（在我们的示例中为数组形式）。该数组被指定为逗号分隔的列表，括在大括号或大括号中。



所以现在，对于文件中的每一行，进程将读取姓名、年龄和收入，并将数据添加到之前创建的空数据表中。就是这样！



我们将使用 Excel 活动将 DataTable 保存到一个新文件中。



让我们添加一个 Excel 应用程序范围，指定输出文件，并添加一个写入范围活动，我们在其中指定了achiversDT 变量并启用了 AddHeader 选项。



现在一切就绪。让我们运行这个过程！



这是我们的结果文件，带有过滤后的结果！



这就对了！在结束视频之前，让我们快速回顾一下我们在这个演示中学到的东西：



使用 Excel 文件的标准方法是将数据存储在数据表变量中并执行不同的数据操作活动以获得所需的结果。



要使用 UiPath 工作簿活动读取范围活动获取 Excel 文件中的所有数据，请确保将范围字段设置为空。



使用过滤数据表活动时可以访问过滤向导。



每次我们在过滤器向导中添加数值时，我们都会在数值后输入“.00”。否则，过滤将失败。



如果我们想通过多个不一定都为真的条件来过滤数据，我们可以将过滤向导中的条件标准按钮切换为“或”。默认情况下，按钮设置为“And”，当我们想要多个条件都为真时使用。



为了指示我们要处理的列，我们使用了列的名称，因为它往往更可靠，但索引也始终是一个选项。



这就是这个演示！

感谢您的观看和快乐的自动化！